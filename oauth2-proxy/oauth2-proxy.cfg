## OAuth2 Proxy Config File
## https://github.com/oauth2-proxy/oauth2-proxy
## <addr>:<port> to listen on for HTTP/HTTPS clients

http_address = "127.0.0.1:4180"
# https_address = ":443"

## Are we running behind a reverse proxy? Will not accept headers like X-Real-Ip unless t
reverse_proxy = true

## TLS Settings
# tls_cert_file = ""
# tls_key_file = ""

## the OAuth Redirect URL.
# defaults to the "https://" + requested host header + "/oauth2/callback"
redirect_url = "https://(Domain Name)/oauth2/callback"

## the http url(s) of the upstream endpoint. If multiple, routing is based on path
upstreams = [
     "http://127.0.0.1:9001/sip-trunk-detail",
     "http://127.0.0.1:9002/sip-trunk-registration"
]

## pass HTTP Basic Auth, X-Forwarded-User and X-Forwarded-Email information to upstream
set_xauthrequest = true
# pass_basic_auth = true
# pass_user_headers = true

## pass the request Host Header to upstream
## when disabled the upstream Host is used as the Host Header
# pass_host_header = true

## Email Domains to allow authentication for (this authorizes any email on this domain)
## for more granular authorization use `authenticated_emails_file`
## To authorize any email addresses use "*"
#email_domains ="*"

## The OAuth Client ID, Secret
client_id = ""
client_secret = ""
provider = "github"
github_org = ""

## Bug Workaround
scope = "user:email"

## Pass OAuth Access token to upstream via "X-Forwarded-Access-Token"
#pass_access_token = true
## Authenticated Email Addresses File (one email per line)
authenticated_emails_file = "/etc/oauth2-proxy/email.txt"

## Htpasswd File (optional)
## Additionally authenticate against a htpasswd file. Entries must be created with "htpasswd -B" for bcrypt encryption
## enabling exposes a username/login signin form
# htpasswd_file = ""

ssl_insecure_skip_verify = false

cookie_name = "SESSION"
cookie_secret = ""
cookie_domains = "(Domain Name)"
cookie_expire = "2h"
cookie_refresh = "0"
cookie_secure = true
cookie_httponly = true
